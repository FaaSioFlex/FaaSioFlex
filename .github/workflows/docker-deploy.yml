name: Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check if Dockerfile Exists
        id: check_dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found, exiting."
            exit 1
          fi

      - name: Build Docker Image
        if: steps.check_dockerfile.outcome == 'success'
        run: |
          docker build -t my-go-app:latest .

      - name: Check if Docker Image Exists
        id: check_image
        run: |
          if ! docker images -q my-go-app:latest; then
            echo "No Docker image found. No image was built."
            exit 1
          fi

      - name: Run Tests
        if: steps.check_image.outcome == 'success'
        run: |
          docker run --rm -p 8080:8080 my-go-app:latest

      - name: Login to Docker Hub
        if: steps.check_image.outcome == 'success'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        if: steps.check_image.outcome == 'success'
        run: |
          docker push my-go-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to Server
        if: success()
        run: |
          ssh user@your-server-ip "docker pull my-go-app:latest && docker run -d -p 8080:8080 my-go-app:latest"
